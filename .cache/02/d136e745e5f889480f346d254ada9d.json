{"id":"node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","dependencies":[{"name":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\build\\esm\\source\\oscillator\\OscillatorInterface.js.map","includedInParent":true,"mtime":1734481789274},{"name":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\Tone\\source\\oscillator\\OscillatorInterface.ts","includedInParent":true,"mtime":1734481791257},{"name":"B:\\moichim\\Downloads\\jppC5aAS\\package.json","includedInParent":true,"mtime":1734481796391},{"name":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\package.json","includedInParent":true,"mtime":1734481788755},{"name":"tslib","loc":{"line":1,"column":26,"index":26},"parent":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\build\\esm\\source\\oscillator\\OscillatorInterface.js","resolved":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tslib\\tslib.es6.js"},{"name":"../../core/context/OfflineContext.js","loc":{"line":2,"column":31,"index":66},"parent":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\build\\esm\\source\\oscillator\\OscillatorInterface.js","resolved":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\build\\esm\\core\\context\\OfflineContext.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateWaveform = generateWaveform;\nvar _tslib = require(\"tslib\");\nvar _OfflineContext = require(\"../../core/context/OfflineContext.js\");\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nfunction generateWaveform(instance, length) {\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function* () {\n    const duration = length / instance.context.sampleRate;\n    const context = new _OfflineContext.OfflineContext(1, duration, instance.context.sampleRate);\n    const clone = new instance.constructor(Object.assign(instance.get(), {\n      // should do 2 iterations\n      frequency: 2 / duration,\n      // zero out the detune\n      detune: 0,\n      context\n    })).toDestination();\n    clone.start(0);\n    const buffer = yield context.render();\n    return buffer.getChannelData(0);\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":8,"column":19}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":8,"column":22}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":8,"column":29}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":115,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":115,"column":22},"generated":{"line":12,"column":9}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":115,"column":38},"generated":{"line":12,"column":25}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":116,"column":1},"generated":{"line":12,"column":26}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":116,"column":14},"generated":{"line":12,"column":34}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":117,"column":1},"generated":{"line":12,"column":36}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":117,"column":15},"generated":{"line":12,"column":42}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":117,"column":15},"generated":{"line":12,"column":44}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":1},"generated":{"line":14,"column":4}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":7},"generated":{"line":14,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":15},"generated":{"line":14,"column":18}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":18},"generated":{"line":14,"column":21}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":24},"generated":{"line":14,"column":27}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":27},"generated":{"line":14,"column":30}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":35},"generated":{"line":14,"column":38}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":36},"generated":{"line":14,"column":39}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":43},"generated":{"line":14,"column":46}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":44},"generated":{"line":14,"column":47}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":54},"generated":{"line":14,"column":57}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":1},"generated":{"line":15,"column":4}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":7},"generated":{"line":15,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":14},"generated":{"line":15,"column":17}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":17},"generated":{"line":15,"column":20}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":21},"generated":{"line":15,"column":24}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":35},"generated":{"line":15,"column":54}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":2},"generated":{"line":15,"column":55}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":3},"generated":{"line":15,"column":56}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":15,"column":58}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":10},"generated":{"line":15,"column":66}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":123,"column":2},"generated":{"line":15,"column":68}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":123,"column":10},"generated":{"line":15,"column":76}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":123,"column":11},"generated":{"line":15,"column":77}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":123,"column":18},"generated":{"line":15,"column":84}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":123,"column":19},"generated":{"line":15,"column":85}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":123,"column":29},"generated":{"line":15,"column":95}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":124,"column":2},"generated":{"line":15,"column":96}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":125,"column":1},"generated":{"line":16,"column":4}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":125,"column":7},"generated":{"line":16,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":125,"column":12},"generated":{"line":16,"column":15}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":125,"column":15},"generated":{"line":16,"column":18}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":125,"column":19},"generated":{"line":16,"column":22}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":125,"column":27},"generated":{"line":16,"column":30}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":125,"column":28},"generated":{"line":16,"column":31}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":125,"column":39},"generated":{"line":16,"column":42}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":2},"generated":{"line":16,"column":43}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":8},"generated":{"line":16,"column":49}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":9},"generated":{"line":16,"column":50}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":15},"generated":{"line":16,"column":56}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":16},"generated":{"line":16,"column":57}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":24},"generated":{"line":16,"column":65}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":25},"generated":{"line":16,"column":66}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":28},"generated":{"line":16,"column":69}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":28},"generated":{"line":16,"column":70}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":30},"generated":{"line":16,"column":71}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":126,"column":32},"generated":{"line":16,"column":73}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":127,"column":3},"generated":{"line":17,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":128,"column":3},"generated":{"line":18,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":128,"column":12},"generated":{"line":18,"column":15}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":128,"column":14},"generated":{"line":18,"column":17}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":128,"column":15},"generated":{"line":18,"column":18}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":128,"column":18},"generated":{"line":18,"column":21}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":128,"column":26},"generated":{"line":18,"column":29}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":129,"column":3},"generated":{"line":19,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":130,"column":3},"generated":{"line":20,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":130,"column":9},"generated":{"line":20,"column":12}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":130,"column":11},"generated":{"line":20,"column":14}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":130,"column":12},"generated":{"line":20,"column":15}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":131,"column":3},"generated":{"line":21,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":132,"column":3},"generated":{"line":22,"column":5}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":22,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":133,"column":2},"generated":{"line":22,"column":7}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":133,"column":3},"generated":{"line":22,"column":8}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":133,"column":16},"generated":{"line":22,"column":21}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":133,"column":16},"generated":{"line":22,"column":22}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":133,"column":18},"generated":{"line":22,"column":23}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":134,"column":1},"generated":{"line":23,"column":4}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":134,"column":6},"generated":{"line":23,"column":9}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":134,"column":7},"generated":{"line":23,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":134,"column":12},"generated":{"line":23,"column":15}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":134,"column":13},"generated":{"line":23,"column":16}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":134,"column":14},"generated":{"line":23,"column":17}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":134,"column":15},"generated":{"line":23,"column":18}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":1},"generated":{"line":24,"column":4}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":7},"generated":{"line":24,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":13},"generated":{"line":24,"column":16}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":16},"generated":{"line":24,"column":19}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":22},"generated":{"line":24,"column":25}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":29},"generated":{"line":24,"column":32}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":30},"generated":{"line":24,"column":33}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":36},"generated":{"line":24,"column":39}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":36},"generated":{"line":24,"column":40}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":135,"column":38},"generated":{"line":24,"column":41}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":136,"column":1},"generated":{"line":25,"column":4}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":136,"column":8},"generated":{"line":25,"column":11}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":136,"column":14},"generated":{"line":25,"column":17}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":136,"column":15},"generated":{"line":25,"column":18}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":136,"column":29},"generated":{"line":25,"column":32}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":136,"column":30},"generated":{"line":25,"column":33}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":136,"column":31},"generated":{"line":25,"column":34}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":136,"column":32},"generated":{"line":25,"column":35}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":137,"column":0},"generated":{"line":26,"column":2}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":137,"column":1},"generated":{"line":26,"column":3}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":137,"column":1},"generated":{"line":26,"column":4}}],"sources":{"../../../../Tone/source/oscillator/OscillatorInterface.ts":"import {\n\tAudioRange,\n\tCents,\n\tDegrees,\n\tFrequency,\n\tPositive,\n} from \"../../core/type/Units.js\";\nimport { Omit } from \"../../core/util/Interface.js\";\nimport { Signal } from \"../../signal/Signal.js\";\nimport { SourceOptions } from \"../Source.js\";\nimport { OfflineContext } from \"../../core/context/OfflineContext.js\";\n\n/**\n * The common interface of all Oscillators\n */\nexport interface ToneOscillatorInterface {\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * osc.type = \"sine2\";\n\t * console.log(osc.baseType); // \"sine\"\n\t */\n\tbaseType: OscillatorType | \"pulse\" | \"pwm\";\n\n\t/**\n\t * The oscillator's type. Also capable of setting the first x number of partials of the oscillator.\n\t * For example: \"sine4\" would set be the first 4 partials of the sine wave and \"triangle8\" would\n\t * set the first 8 partials of the triangle wave.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator().toDestination().start();\n\t * \tosc.type = \"sine2\";\n\t * }, 0.1, 1);\n\t */\n\ttype: ExtendedToneOscillatorType;\n\n\t/**\n\t * The frequency value of the oscillator\n\t * @example\n\t * const osc = new Tone.FMOscillator(\"Bb4\").toDestination().start();\n\t * osc.frequency.rampTo(\"D2\", 3);\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune value in cents (100th of a semitone).\n\t * @example\n\t * const osc = new Tone.PulseOscillator(\"F3\").toDestination().start();\n\t * // pitch it 1 octave = 12 semitones = 1200 cents\n\t * osc.detune.setValueAtTime(-1200, Tone.now());\n\t * osc.detune.setValueAtTime(1200, Tone.now() + 0.5);\n\t * osc.detune.linearRampToValueAtTime(0, Tone.now() + 1);\n\t * osc.stop(Tone.now() + 1.5);\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The phase is the starting position within the oscillator's cycle. For example\n\t * a phase of 180 would start halfway through the oscillator's cycle.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator({\n\t * \t\tfrequency: 20,\n\t * \t\tphase: 90\n\t * \t}).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\tphase: Degrees;\n\n\t/**\n\t * The partials describes the relative amplitude of each of the harmonics of the oscillator.\n\t * The first value in the array is the first harmonic (i.e. the fundamental frequency), the\n\t * second harmonic is an octave up, the third harmonic is an octave and a fifth, etc. The resulting\n\t * oscillator output is composed of a sine tone at the relative amplitude at each of the harmonic intervals.\n\t *\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @example\n\t * const osc = new Tone.Oscillator(\"F3\").toDestination().start();\n\t * setInterval(() => {\n\t * \t// generate 8 random partials\n\t * \tosc.partials = new Array(8).fill(0).map(() => Math.random());\n\t * }, 1000);\n\t */\n\tpartials: number[];\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials.\n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is\n\t * not settable, but equals the length of the partials array. A square wave wave\n\t * is composed of only odd harmonics up through the harmonic series. Partial count\n\t * can limit the number of harmonics which are used to generate the waveform.\n\t * @example\n\t * const osc = new Tone.Oscillator(\"C3\", \"square\").toDestination().start();\n\t * osc.partialCount = 1;\n\t * setInterval(() => {\n\t * \tosc.partialCount++;\n\t * \tconsole.log(osc.partialCount);\n\t * }, 500);\n\t */\n\tpartialCount?: number;\n\n\t/**\n\t * Returns an array of values which represents the waveform.\n\t * @param length The length of the waveform to return\n\t */\n\tasArray(length: number): Promise<Float32Array>;\n}\n\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport async function generateWaveform(\n\tinstance: any,\n\tlength: number\n): Promise<Float32Array> {\n\tconst duration = length / instance.context.sampleRate;\n\tconst context = new OfflineContext(\n\t\t1,\n\t\tduration,\n\t\tinstance.context.sampleRate\n\t);\n\tconst clone = new instance.constructor(\n\t\tObject.assign(instance.get(), {\n\t\t\t// should do 2 iterations\n\t\t\tfrequency: 2 / duration,\n\t\t\t// zero out the detune\n\t\t\tdetune: 0,\n\t\t\tcontext,\n\t\t})\n\t).toDestination();\n\tclone.start(0);\n\tconst buffer = await context.render();\n\treturn buffer.getChannelData(0);\n}\n\n/**\n * The supported number of partials\n */\ntype PartialsRange =\n\t| 1\n\t| 2\n\t| 3\n\t| 4\n\t| 5\n\t| 6\n\t| 7\n\t| 8\n\t| 9\n\t| 10\n\t| 11\n\t| 12\n\t| 13\n\t| 14\n\t| 15\n\t| 16\n\t| 17\n\t| 18\n\t| 19\n\t| 20\n\t| 21\n\t| 22\n\t| 23\n\t| 24\n\t| 25\n\t| 26\n\t| 27\n\t| 28\n\t| 29\n\t| 30\n\t| 31\n\t| 32;\n\n/**\n * Oscillators with partials\n */\ntype SineWithPartials = `sine${PartialsRange}`;\n\ntype SquareWithPartials = `square${PartialsRange}`;\n\ntype SawtoothWithPartials = `sawtooth${PartialsRange}`;\n\ntype TriangleWithPartials = `triangle${PartialsRange}`;\n\ntype TypeWithPartials =\n\t| SineWithPartials\n\t| SquareWithPartials\n\t| TriangleWithPartials\n\t| SawtoothWithPartials;\n\ninterface BaseOscillatorOptions extends SourceOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\tphase: Degrees;\n}\n\nexport type NonCustomOscillatorType = Exclude<OscillatorType, \"custom\">;\n\ntype AllNonCustomOscillatorType = NonCustomOscillatorType | TypeWithPartials;\n\nexport type ToneOscillatorType = AllNonCustomOscillatorType | \"custom\";\n\nexport type ExtendedToneOscillatorType = ToneOscillatorType | \"pwm\" | \"pulse\";\n\n/**\n * Oscillator Interfaces\n */\ninterface ToneCustomOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface ToneTypeOscillatorOptions extends BaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface TonePartialOscillatorOptions extends BaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type ToneOscillatorConstructorOptions =\n\t| ToneCustomOscillatorOptions\n\t| ToneTypeOscillatorOptions\n\t| TonePartialOscillatorOptions;\n\nexport interface ToneOscillatorOptions extends BaseOscillatorOptions {\n\ttype: ToneOscillatorType;\n\tpartialCount: number;\n\tpartials: number[];\n}\n\n/**\n * FMOscillator Interface\n */\ninterface FMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface FMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface FMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FMConstructorOptions =\n\t| FMTypeOscillatorOptions\n\t| FMCustomOscillatorOptions\n\t| FMPartialsOscillatorOptions;\n\nexport interface FMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\n/**\n * AMOscillator Interface\n */\ninterface AMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface AMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface AMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface AMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type AMConstructorOptions =\n\t| AMCustomOscillatorOptions\n\t| AMTypeOscillatorOptions\n\t| AMPartialsOscillatorOptions;\n\nexport interface AMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n/**\n * FatOscillator\n */\ninterface FatBaseOscillatorOptions extends BaseOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\ninterface FatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface FatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FatConstructorOptions =\n\t| FatCustomOscillatorOptions\n\t| FatTypeOscillatorOptions\n\t| FatPartialsOscillatorOptions;\n\nexport interface FatOscillatorOptions extends ToneOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\n/**\n * Pulse Oscillator\n */\nexport interface PulseOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pulse\";\n\twidth: AudioRange;\n}\n\n/**\n * PWM Oscillator\n */\nexport interface PWMOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pwm\";\n\tmodulationFrequency: Frequency;\n}\n\n/**\n * OMNI OSCILLATOR\n */\n\n/**\n * FM Oscillators with partials\n */\ntype FMSineWithPartials = `fmsine${PartialsRange}`;\n\ntype FMSquareWithPartials = `fmsquare${PartialsRange}`;\n\ntype FMSawtoothWithPartials = `fmsawtooth${PartialsRange}`;\n\ntype FMTriangleWithPartials = `fmtriangle${PartialsRange}`;\n\ntype FMTypeWithPartials =\n\t| FMSineWithPartials\n\t| FMSquareWithPartials\n\t| FMSawtoothWithPartials\n\t| FMTriangleWithPartials;\n\n/**\n * AM Oscillators with partials\n */\ntype AMSineWithPartials = `amsine${PartialsRange}`;\n\ntype AMSquareWithPartials = `amsquare${PartialsRange}`;\n\ntype AMSawtoothWithPartials = `amsawtooth${PartialsRange}`;\n\ntype AMTriangleWithPartials = `amtriangle${PartialsRange}`;\n\ntype AMTypeWithPartials =\n\t| AMSineWithPartials\n\t| AMSquareWithPartials\n\t| AMSawtoothWithPartials\n\t| AMTriangleWithPartials;\n\n/**\n * Fat Oscillators with partials\n */\ntype FatSineWithPartials = `fatsine${PartialsRange}`;\n\ntype FatSquareWithPartials = `fatsquare${PartialsRange}`;\n\ntype FatSawtoothWithPartials = `fatsawtooth${PartialsRange}`;\n\ntype FatTriangleWithPartials = `fattriangle${PartialsRange}`;\n\ntype FatTypeWithPartials =\n\t| FatSineWithPartials\n\t| FatSquareWithPartials\n\t| FatSawtoothWithPartials\n\t| FatTriangleWithPartials;\n\n/**\n * Omni FM\n */\ninterface OmniFMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: FMTypeWithPartials;\n}\n\n/**\n * Omni AM\n */\ninterface OmniAMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amcustom\";\n\tpartials: number[];\n}\n\ninterface OmniAMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniAMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: AMTypeWithPartials;\n}\n\n/**\n * Omni Fat\n */\ninterface OmniFatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: FatTypeWithPartials;\n}\n\nexport type OmniOscillatorType =\n\t| \"fatsine\"\n\t| \"fatsquare\"\n\t| \"fatsawtooth\"\n\t| \"fattriangle\"\n\t| \"fatcustom\"\n\t| FatTypeWithPartials\n\t| \"fmsine\"\n\t| \"fmsquare\"\n\t| \"fmsawtooth\"\n\t| \"fmtriangle\"\n\t| \"fmcustom\"\n\t| FMTypeWithPartials\n\t| \"amsine\"\n\t| \"amsquare\"\n\t| \"amsawtooth\"\n\t| \"amtriangle\"\n\t| \"amcustom\"\n\t| AMTypeWithPartials\n\t| TypeWithPartials\n\t| OscillatorType\n\t| \"pulse\"\n\t| \"pwm\";\n\nexport type OmniOscillatorOptions =\n\t| PulseOscillatorOptions\n\t| PWMOscillatorOptions\n\t| OmniFatCustomOscillatorOptions\n\t| OmniFatTypeOscillatorOptions\n\t| OmniFatPartialsOscillatorOptions\n\t| OmniFMCustomOscillatorOptions\n\t| OmniFMTypeOscillatorOptions\n\t| OmniFMPartialsOscillatorOptions\n\t| OmniAMCustomOscillatorOptions\n\t| OmniAMTypeOscillatorOptions\n\t| OmniAMPartialsOscillatorOptions\n\t| ToneOscillatorConstructorOptions;\n\ntype OmitSourceOptions<T extends BaseOscillatorOptions> = Omit<\n\tT,\n\t\"frequency\" | \"detune\" | \"context\"\n>;\n\n/**\n * The settable options for the omni oscillator inside of the source which excludes certain attributes that are defined by the parent class\n */\nexport type OmniOscillatorSynthOptions =\n\t| OmitSourceOptions<PulseOscillatorOptions>\n\t| OmitSourceOptions<PWMOscillatorOptions>\n\t| OmitSourceOptions<OmniFatCustomOscillatorOptions>\n\t| OmitSourceOptions<OmniFatTypeOscillatorOptions>\n\t| OmitSourceOptions<OmniFatPartialsOscillatorOptions>\n\t| OmitSourceOptions<OmniFMCustomOscillatorOptions>\n\t| OmitSourceOptions<OmniFMTypeOscillatorOptions>\n\t| OmitSourceOptions<OmniFMPartialsOscillatorOptions>\n\t| OmitSourceOptions<OmniAMCustomOscillatorOptions>\n\t| OmitSourceOptions<OmniAMTypeOscillatorOptions>\n\t| OmitSourceOptions<OmniAMPartialsOscillatorOptions>\n\t| OmitSourceOptions<ToneCustomOscillatorOptions>\n\t| OmitSourceOptions<ToneTypeOscillatorOptions>\n\t| OmitSourceOptions<TonePartialOscillatorOptions>;\n"},"lineCount":null}},"error":null,"hash":"2c14ff8a1e22796e9d89afa397712462","cacheData":{"env":{}}}