{"id":"node_modules/tone/build/esm/core/context/BaseContext.js","dependencies":[{"name":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\build\\esm\\core\\context\\BaseContext.js.map","includedInParent":true,"mtime":1734481788830},{"name":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\Tone\\core\\context\\BaseContext.ts","includedInParent":true,"mtime":1734481789899},{"name":"B:\\moichim\\Downloads\\jppC5aAS\\package.json","includedInParent":true,"mtime":1734481796391},{"name":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\package.json","includedInParent":true,"mtime":1734481788755},{"name":"../util/Emitter.js","loc":{"line":1,"column":24,"index":24},"parent":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\build\\esm\\core\\context\\BaseContext.js","resolved":"B:\\moichim\\Downloads\\jppC5aAS\\node_modules\\tone\\build\\esm\\core\\util\\Emitter.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseContext = void 0;\nvar _Emitter = require(\"../util/Emitter.js\");\nclass BaseContext extends _Emitter.Emitter {\n  constructor() {\n    super(...arguments);\n    this.isOffline = false;\n  }\n  /*\n   * This is a placeholder so that JSON.stringify does not throw an error\n   * This matches what JSON.stringify(audioContext) returns on a native\n   * audioContext instance.\n   */\n  toJSON() {\n    return {};\n  }\n}\nexports.BaseContext = BaseContext;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":12}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":15}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":22}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":8,"column":0}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":8,"column":6}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":29,"column":1},"generated":{"line":8,"column":17}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":29,"column":9},"generated":{"line":8,"column":26}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":29,"column":40},"generated":{"line":8,"column":42}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":29,"column":40},"generated":{"line":8,"column":43}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":9,"column":2}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":9,"column":13}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":9,"column":14}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":9,"column":16}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":158,"column":10},"generated":{"line":11,"column":4}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":158,"column":10},"generated":{"line":11,"column":8}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":158,"column":10},"generated":{"line":11,"column":9}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":158,"column":19},"generated":{"line":11,"column":18}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":158,"column":31},"generated":{"line":11,"column":21}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":158,"column":36},"generated":{"line":11,"column":26}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":159,"column":0},"generated":{"line":12,"column":2}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":13,"column":2}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":154,"column":1},"generated":{"line":18,"column":2}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":154,"column":7},"generated":{"line":18,"column":8}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":154,"column":7},"generated":{"line":18,"column":9}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":154,"column":7},"generated":{"line":18,"column":11}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":155,"column":2},"generated":{"line":19,"column":4}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":155,"column":9},"generated":{"line":19,"column":11}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":155,"column":9},"generated":{"line":19,"column":12}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":155,"column":11},"generated":{"line":19,"column":13}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":20,"column":2}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":159,"column":1},"generated":{"line":22,"column":0}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":159,"column":1},"generated":{"line":22,"column":7}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":159,"column":1},"generated":{"line":22,"column":8}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":159,"column":1},"generated":{"line":22,"column":19}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":159,"column":1},"generated":{"line":22,"column":22}},{"source":"../../../../Tone/core/context/BaseContext.ts","name":null,"original":{"line":159,"column":1},"generated":{"line":22,"column":33}}],"sources":{"../../../../Tone/core/context/BaseContext.ts":"import { Seconds } from \"../type/Units.js\";\nimport { Emitter } from \"../util/Emitter.js\";\nimport { AnyAudioContext } from \"./AudioContext.js\";\nimport type { DrawClass as Draw } from \"../util/Draw.js\";\nimport type { DestinationClass as Destination } from \"./Destination.js\";\nimport type { TransportClass as Transport } from \"../clock/Transport.js\";\nimport type { ListenerClass as Listener } from \"./Listener.js\";\n\n// these are either not used in Tone.js or deprecated and not implemented.\nexport type ExcludedFromBaseAudioContext =\n\t| \"onstatechange\"\n\t| \"addEventListener\"\n\t| \"removeEventListener\"\n\t| \"listener\"\n\t| \"dispatchEvent\"\n\t| \"audioWorklet\"\n\t| \"destination\"\n\t| \"createScriptProcessor\";\n\n// the subset of the BaseAudioContext which Tone.Context implements.\nexport type BaseAudioContextSubset = Omit<\n\tBaseAudioContext,\n\tExcludedFromBaseAudioContext\n>;\n\nexport type ContextLatencyHint = AudioContextLatencyCategory;\n\nexport abstract class BaseContext\n\textends Emitter<\"statechange\" | \"tick\">\n\timplements BaseAudioContextSubset\n{\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\tabstract createAnalyser(): AnalyserNode;\n\n\tabstract createOscillator(): OscillatorNode;\n\n\tabstract createBufferSource(): AudioBufferSourceNode;\n\n\tabstract createBiquadFilter(): BiquadFilterNode;\n\n\tabstract createBuffer(\n\t\t_numberOfChannels: number,\n\t\t_length: number,\n\t\t_sampleRate: number\n\t): AudioBuffer;\n\n\tabstract createChannelMerger(\n\t\t_numberOfInputs?: number | undefined\n\t): ChannelMergerNode;\n\n\tabstract createChannelSplitter(\n\t\t_numberOfOutputs?: number | undefined\n\t): ChannelSplitterNode;\n\n\tabstract createConstantSource(): ConstantSourceNode;\n\n\tabstract createConvolver(): ConvolverNode;\n\n\tabstract createDelay(_maxDelayTime?: number | undefined): DelayNode;\n\n\tabstract createDynamicsCompressor(): DynamicsCompressorNode;\n\n\tabstract createGain(): GainNode;\n\n\tabstract createIIRFilter(\n\t\t_feedForward: number[] | Float32Array,\n\t\t_feedback: number[] | Float32Array\n\t): IIRFilterNode;\n\n\tabstract createPanner(): PannerNode;\n\n\tabstract createPeriodicWave(\n\t\t_real: number[] | Float32Array,\n\t\t_imag: number[] | Float32Array,\n\t\t_constraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave;\n\n\tabstract createStereoPanner(): StereoPannerNode;\n\n\tabstract createWaveShaper(): WaveShaperNode;\n\n\tabstract createMediaStreamSource(\n\t\t_stream: MediaStream\n\t): MediaStreamAudioSourceNode;\n\n\tabstract createMediaElementSource(\n\t\t_element: HTMLMediaElement\n\t): MediaElementAudioSourceNode;\n\n\tabstract createMediaStreamDestination(): MediaStreamAudioDestinationNode;\n\n\tabstract decodeAudioData(_audioData: ArrayBuffer): Promise<AudioBuffer>;\n\n\t//---------------------------\n\t// TONE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tabstract createAudioWorkletNode(\n\t\t_name: string,\n\t\t_options?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode;\n\n\tabstract get rawContext(): AnyAudioContext;\n\n\tabstract addAudioWorkletModule(_url: string): Promise<void>;\n\n\tabstract lookAhead: number;\n\n\tabstract latencyHint: ContextLatencyHint | Seconds;\n\n\tabstract resume(): Promise<void>;\n\n\tabstract setTimeout(\n\t\t_fn: (...args: any[]) => void,\n\t\t_timeout: Seconds\n\t): number;\n\n\tabstract clearTimeout(_id: number): this;\n\n\tabstract setInterval(\n\t\t_fn: (...args: any[]) => void,\n\t\t_interval: Seconds\n\t): number;\n\n\tabstract clearInterval(_id: number): this;\n\n\tabstract getConstant(_val: number): AudioBufferSourceNode;\n\n\tabstract get currentTime(): Seconds;\n\n\tabstract get state(): AudioContextState;\n\n\tabstract get sampleRate(): number;\n\n\tabstract get listener(): Listener;\n\n\tabstract get transport(): Transport;\n\n\tabstract get draw(): Draw;\n\n\tabstract get destination(): Destination;\n\n\tabstract now(): Seconds;\n\n\tabstract immediate(): Seconds;\n\n\t/*\n\t * This is a placeholder so that JSON.stringify does not throw an error\n\t * This matches what JSON.stringify(audioContext) returns on a native\n\t * audioContext instance.\n\t */\n\ttoJSON(): Record<string, any> {\n\t\treturn {};\n\t}\n\n\treadonly isOffline: boolean = false;\n}\n"},"lineCount":null}},"error":null,"hash":"a860d1880338c2fbab87cbad5dd025e8","cacheData":{"env":{}}}